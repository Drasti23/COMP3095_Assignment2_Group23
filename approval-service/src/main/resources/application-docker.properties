spring.application.name=approval-service
approval-service.version=v1.0
# Server Port
server.port=9007

# PostgreSQL Database Configuration for Docker
# Use either the Docker container name or localhost depending on how you're running your application.
spring.datasource.url=jdbc:postgresql://postgres-approval:5432/approval-service
# Uncomment the line below if running locally
# spring.datasource.url=jdbc:postgresql://localhost:5435/room-service
spring.datasource.username=admin
spring.datasource.password=password

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true

spring.jps.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

springdoc.swagger-ui.path=/swagger-ui

springdoc.api-docs.path=/api-docs


event-service.url=http://localhost:9005/api/events/

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always



# Circuit breaker settings


# application.properties
resilience4j.circuitbreaker.instances.eventServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.eventServiceCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.eventServiceCircuitBreaker.slidingWindowSize=100
resilience4j.circuitbreaker.instances.eventServiceCircuitBreaker.waitDurationInOpenState=10000
resilience4j.circuitbreaker.instances.eventServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=5

logging.level.io.github.resilience4j.circuitbreaker=DEBUG